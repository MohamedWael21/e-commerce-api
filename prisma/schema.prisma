// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String
  stock       Int         @default(1)
  price       Float
  CartItem    CartItem[]
  orderItem   OrderItem[]
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  password String
  role     Role    @default(USER)
  cart     Cart?
  Order    Order[]
}

model Cart {
  id       Int        @id @default(autoincrement())
  user     User       @relation(fields: [userId], references: [id])
  userId   Int        @unique
  CartItem CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Order {
  id         Int         @id @default(autoincrement())
  totalPrice Float
  status     Status      @default(PENDING)
  user       User        @relation(fields: [userId], references: [id])
  userId     Int
  orderItem  OrderItem[]
  date       DateTime    @db.Date
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  productId Int
}

enum Role {
  ADMIN
  USER
}

enum Status {
  DELIVERED
  PENDING
}
